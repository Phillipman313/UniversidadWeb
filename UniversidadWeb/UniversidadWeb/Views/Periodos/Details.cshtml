@model UniversidadWeb.Models.Periodo

@{
    ViewBag.Title = Model.PeriodoCompleto;
    WebGrid grid = new WebGrid(source: Model.Cursos, canSort: false);
}

<style>
    th, td {
        padding: 5px;
    }

    th {
        background-color: rgb(248, 248, 248);
    }

    #gridT, #gridT tr {
        border: 1px solid #0D857B;
    }

    #subT, #subT tr {
        border: 1px solid #f3f3f3;
    }

    #subT {
        margin: 0px 0px 0px 10px;
        padding: 5px;
        width: 95%;
    }

        #subT th {
            font-size: 12px;
        }

    .hoverEff {
        cursor: pointer;
    }

        .hoverEff:hover {
            background-color: rgb(248, 242, 242);
        }

    .showRecord {
        background-image: url(/Images/pm.png);
        background-position-x: -22px;
        background-repeat: no-repeat;
    }

    .hideRecord {
        background-image: url(/Images/pm.png);
        background-position-x: -2px;
        background-repeat: no-repeat;
    }
</style>

<h2>Details</h2>

<div>
    <h4>@Model.Orden - @Model.Ciclo.Nombre @Model.Anyo.Anyo1 (@Model.FechaInicio - @Model.FechaFinal)</h4>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Orden)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Orden)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FechaInicio)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FechaInicio)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.FechaFinal)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.FechaFinal)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Anyo.Anyo1)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Anyo.Anyo1)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Ciclo)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Ciclo.Nombre)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Sede)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Sede.Nombre)
        </dd>

    </dl>
</div>
@section Scripts {
<script>
            $(document).ready(function () {
                var size = $("#main #gridT > thead > tr >th").size(); // get total column
                $("#main #gridT > thead > tr >th").last().remove(); // remove last column
                $("#main #gridT > thead > tr").prepend("<th></th>"); // add one column at first for collapsible column
                $("#main #gridT > tbody > tr").each(function (i, el) {
                    $(this).prepend(
                            $("<td></td>")
                            .addClass("showRecord")
                            .addClass("hoverEff")
                            .attr('title',"click for show/hide")
                        );

                    //Now get sub table from last column and add this to the next new added row
                    var table = $("table", this).parent().html();
                    //add new row with this subtable
                    $(this).after("<tr><td></td><td style='padding:5px; margin:0px;' colspan='" + (size - 1) + "'>" + table + "</td></tr>");
                    $("table", this).parent().remove();
                    // ADD CLICK EVENT FOR MAKE COLLAPSIBLE
                    $(this).on("click", ".hoverEff", function () {
                        $(this).parent().closest("tr").next().slideToggle(100);
                        $(this).toggleClass("showRecord hideRecord");
                    });
                });

                //by default make all subgrid in collapse mode
                $("#main #gridT > tbody > tr td.showRecord").each(function (i, el) {
                    $(this).toggleClass("showRecord hideRecord");
                    $(this).parent().closest("tr").next().slideToggle(100);
                });

            });
</script>
}
<div id="main" style="padding:25px; background-color:white;">
    @grid.GetHtml(
    htmlAttributes: new { id = "gridT", width = "500px" },
    columns: grid.Columns(
            grid.Column("Codigo", "Codigo", item => item.Cod_Curso),
            grid.Column("Nombre", "Nombre", item => item.Nombre),
            grid.Column("Creditos", "Creditos", item => item.Creditos),

            grid.Column(format: (item) =>
            {
                WebGrid grupos = new WebGrid(source: item.CursoLectivo, canSort: false);
                return grupos.GetHtml(
                    htmlAttributes: new { id = "subT" },
                    columns: grupos.Columns(
                            grupos.Column("Grupo", "Grupo", parte => Html.ActionLink((string)parte.CursoLectivo1, "Details", "CursoLectivos", new { id = parte.Id_CursoLectivo}, null)),
                            grupos.Column("Horario", "Horario", parte => Html.Raw(parte.horas.Replace("\n", "<br/>")))
                        )
                    );
            })
        )
        )
</div>
<p>
    @Html.ActionLink("Edit", "Edit", new { id = Model.Id_Periodo }) |
    @Html.ActionLink("Back to List", "Index")
</p>
